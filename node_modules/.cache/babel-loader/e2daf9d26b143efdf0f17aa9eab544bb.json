{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/avinash/react/viflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/avinash/react/viflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/avinash/react/viflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import YouTube from'react-youtube';import axios from'../axios';import'./Row.css';import movieTrailer from'movie-trailer';var imgurl=\"https://image.tmdb.org/t/p/original/\";function Row(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(props.fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.fetchUrl]);var opts={height:\"390\",width:\"100%\",playerVars:{autoplay:1}};var handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.original_name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));}).catch(function(error){return console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props.title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row__poster \".concat(props.isLarge&&\"row__posterLarge\"),src:\"\".concat(imgurl).concat(props.isLarge?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["/home/avinash/react/viflix/src/components/Row.js"],"names":["React","useState","useEffect","YouTube","axios","movieTrailer","imgurl","Row","props","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","fetchUrl","request","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","title","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","isLarge","poster_path","backdrop_path","id"],"mappings":"wgBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAC,sCAAb,CACA,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,eACSP,QAAQ,CAAC,EAAD,CADjB,wCACTQ,MADS,eACFC,SADE,8BAEiBT,QAAQ,CAAC,EAAD,CAFzB,yCAETU,UAFS,eAEEC,aAFF,eAIhBV,SAAS,CAAC,UAAM,SACGW,CAAAA,SADH,qIACZ,qKACqBT,CAAAA,KAAK,CAACU,GAAN,CAAUN,KAAK,CAACO,QAAhB,CADrB,QACMC,OADN,eAEAN,SAAS,CAACM,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFA,gCAGOF,OAHP,wDADY,4CAKXH,SAAS,GAEb,CAPQ,CAON,CAACL,KAAK,CAACO,QAAP,CAPM,CAAT,CASA,GAAMI,CAAAA,IAAI,CAAC,CACPC,MAAM,CAAE,KADD,CAEPC,KAAK,CAAE,MAFA,CAGPC,UAAU,CAAC,CACPC,QAAQ,CAAE,CADH,CAHJ,CAAX,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAGd,UAAH,CAAc,CACVC,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,IAGI,CACAP,YAAY,CAAC,CAAAoB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,IAAaD,KAAb,SAAaA,KAAb,iBAAaA,KAAK,CAAEE,KAApB,IAA2BF,KAA3B,SAA2BA,KAA3B,iBAA2BA,KAAK,CAAEG,aAAlC,GAAiD,EAAlD,CAAZ,CACCC,IADD,CACM,SAACC,GAAD,CAAS,CACX,GAAMC,CAAAA,SAAS,CAAC,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAhB,CACAtB,aAAa,CAACmB,SAAS,CAACjB,GAAV,CAAc,GAAd,CAAD,CAAb,CACH,CAJD,EAIGqB,KAJH,CAIS,SAACC,KAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAT,EAJT,EAKH,CACJ,CAXD,CAYA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACC,oBACI5B,KAAK,CAACmB,KADV,EADD,cAIA,YAAK,SAAS,CAAC,cAAf,UAEClB,MAAM,CAAC8B,GAAP,CAAW,SAAAd,KAAK,qBACb,YAEA,OAAO,CAAE,yBAAKD,CAAAA,WAAW,CAACC,KAAD,CAAhB,EAFT,CAGA,SAAS,uBAAiBjB,KAAK,CAACgC,OAAN,EAAiB,kBAAlC,CAHT,CAIA,GAAG,WAAKlC,MAAL,SAAcE,KAAK,CAACgC,OAAN,CAAef,KAAK,CAACgB,WAArB,CAAmChB,KAAK,CAACiB,aAAvD,CAJH,CAI2E,GAAG,CAAEjB,KAAK,CAACC,IAJtF,EACKD,KAAK,CAACkB,EADX,CADa,EAAhB,CAFD,EAJA,CAeChC,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAEQ,IAApC,EAff,GADJ,CAmBH,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import React,{ useState,useEffect} from 'react'\nimport YouTube from 'react-youtube';\nimport axios from '../axios';\nimport './Row.css';\nimport movieTrailer from 'movie-trailer';\n\nconst imgurl=\"https://image.tmdb.org/t/p/original/\";\nfunction Row(props) {\n    const [movies,setMovies]=useState([]);\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\n\n    useEffect(() => {\n        async function fetchData(){\n        const request= await axios.get(props.fetchUrl);\n        setMovies(request.data.results);\n        return request;\n        }fetchData();\n        \n    }, [props.fetchUrl]);\n\n    const opts={\n        height: \"390\",\n        width: \"100%\",\n        playerVars:{\n            autoplay :1,\n        },\n    }\n    const handleClick = (movie) => {\n        if(trailerUrl){\n            setTrailerUrl('');\n        }\n        else{\n            movieTrailer(movie?.name||movie?.title||movie?.original_name||\"\")\n            .then((url) => {\n                const urlParams=new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n            }).catch((error)=>console.log(error));\n        }\n    }\n    return ( \n        <div className=\"row\">\n         <h2>\n            {props.title}\n        </h2>\n        <div className=\"row__posters\">\n        \n        {movies.map(movie=>(\n            <img \n            key={movie.id}\n            onClick={()=> handleClick(movie)}\n            className={`row__poster ${props.isLarge && \"row__posterLarge\"}`}\n            src={`${imgurl}${props.isLarge ?movie.poster_path : movie.backdrop_path}`} alt={movie.name}>\n            </img>\n        ))}\n        </div>\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\n        </div>\n    );\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}